version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: surveiv2_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - surveiv2_network
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=surveiv2
      - DB_USERNAME=surveiv2_user
      - DB_PASSWORD=surveiv2_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis

  db:
    image: mysql:8.0
    container_name: surveiv2_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: surveiv2
      MYSQL_USER: surveiv2_user
      MYSQL_PASSWORD: surveiv2_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    networks:
      - surveiv2_network

  redis:
    image: redis:7-alpine
    container_name: surveiv2_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - surveiv2_network

  nginx:
    image: nginx:alpine
    container_name: surveiv2_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - surveiv2_network

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  surveiv2_network:
    driver: bridge
